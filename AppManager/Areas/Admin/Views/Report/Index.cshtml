@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Chart";
}

<section class="content-header">
    <h1>
        &nbsp;
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard active"></i> Home</a></li>
        <li><a href="#" class="active">Báo cáo</a></li>
    </ol>
</section>

<section class="content">
    <div class="row">
        <div class="col-md-8">
            <div class="box box-info">
                <div class="box-header with-border">
                  <h3 class="box-title">Thống kế danh mục sản phẩm mua theo năm</h3>
                  <div class="box-tools">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                  </div>
                </div>
                <div class="box-body">
                  <div class="chart">
                    <canvas id="lineChart" style="height:150px"></canvas>
                  </div>
                </div>
                <!-- /.box-body -->
              </div>
            <!-- /.box-body -->
        </div>
        <div class="col-md-4">
            <div class="box box-info">
            <div class="box-header with-border">
              <h3 class="box-title">Thống kê theo tháng</h3>
              <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
              </div>
            </div>
            <!-- /.box-header -->
            <div class="box-body">
              <div class="row">
                <div class="col-md-8">
                  <div class="chart-responsive">
                    <canvas id="pieChart" height="183"></canvas>
                  </div>
                  <!-- ./chart-responsive -->
                </div>
                <!-- /.col -->
                <div class="col-md-4">
                  <ul class="chart-legend clearfix" id='pie-chart'>
                  </ul>
                </div>
                <!-- /.col -->
              </div>
              <!-- /.row -->
            </div>
            <!-- /.footer -->
          </div>
        </div>
    </div>
</section>

@section Scripts{
    <script>

        // line chart

        $.ajax({
            url: "/Admin/Report/AnnuallyCategoryReport",
            type: "GET",
            dataType: "json",
            beforeSend: function(){},
            success: function(data){
                console.log(data + "123");
                let r = 0, g = 0, b = 0, r1 = 50;
                var chartData = [];
                let rgb = ["#f56954", "#00a65a", "#f39c12", "#00c0ef", "#3c8dbc", "#605ca8", "#ff851b", "#D81B60", "#111111", "#d2d6de", "#001F3F"]
                data.forEach(function(item,index){
                    chartData.push({
                          label: item.category,
                          fillColor: rgb[index],
                          strokeColor: rgb[index],
                          pointColor: rgb[index],
                          pointStrokeColor: rgb[index],
                          pointHighlightFill: rgb[index],
                          pointHighlightStroke: rgb[index],
                          data: item.month
                    });
                    if (index == rgb.Length) return;
                })
                var lineChartCanvas = $("#lineChart").get(0).getContext("2d");
                var lineChart = new Chart(lineChartCanvas);

                var lineChartData = {
                  labels: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "November", "December"],
                  datasets: chartData, 
                };

                var lineChartOptions = {
                  //Boolean - If we should show the scale at all
                  showScale: true,
                  //Boolean - Whether grid lines are shown across the chart
                  scaleShowGridLines: false,
                  //String - Colour of the grid lines
                  scaleGridLineColor: "rgba(125, 202, 194, 1)",
                  //Number - Width of the grid lines
                  scaleGridLineWidth: 1,
                  //Boolean - Whether to show horizontal lines (except X axis)
                  scaleShowHorizontalLines: true,
                  //Boolean - Whether to show vertical lines (except Y axis)
                  scaleShowVerticalLines: true,
                  //Boolean - Whether the line is curved between points
                  bezierCurve: true,
                  //Number - Tension of the bezier curve between points
                  bezierCurveTension: 0.3,
                  //Boolean - Whether to show a dot for each point
                  pointDot: false,
                  //Number - Radius of each point dot in pixels
                  pointDotRadius: 4,
                  //Number - Pixel width of point dot stroke
                  pointDotStrokeWidth: 1,
                  //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                  pointHitDetectionRadius: 20,
                  //Boolean - Whether to show a stroke for datasets
                  datasetStroke: true,
                  //Number - Pixel width of dataset stroke
                  datasetStrokeWidth: 2,
                  //Boolean - Whether to fill the dataset with a color
                  datasetFill: true,
                  //String - A legend template
                  legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
                  //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                  maintainAspectRatio: true,
                  //Boolean - whether to make the chart responsive to window resizing
                  responsive: true
                };
                
                lineChartOptions.datasetFill = false;
                lineChart.Line(lineChartData, lineChartOptions);
            },
            error: function(){
                console.log("error!");
            },
            complete: function(){}
        });

        // pie-chart
        // ajax sẽ chạy sau cùng sau khi các script chạy xong, nên phải nhét code vẽ pie vào success để nó xử lý khi đã có kết quả
        // nếu để ngoài thì chart vẽ rồi data mới được lôi ra

        $.ajax({
            url: "/Admin/Report/MonthlyCategoryReport",
            type: "GET",
            dataType: "json",
            beforeSend: function(){},
            success: function(data){
                console.log(data + "123");
                let color = ['red', 'green', 'yellow', 'aqua', 'light-blue', 'purple'];
                let rgb = ["#f56954", "#00a65a", "#f39c12", "#00c0ef", "#3c8dbc", "#605ca8", "#d2d6de"]
                let total = 0, currentsum = 0;
                var PieData = [];
                data.forEach(function(item,index){
                    total += item.quantity;
                });
                data.forEach(function(item,index){
                    let html = `<li><i class="fa fa-circle-o text-${color[index]}"></i>&nbsp;${item.name}</li>`;
                    PieData.push({
                                    value: item.quantity,
                                    color: rgb[index],
                                    highlight: rgb[index],
                                    label: item.name
                                  });
                    
                    currentsum += item.quantity;
                    $('#pie-chart').append(html);  
                    if (index == color.Length - 1){
                        $('#pie-chart').append(`<li><i class="fa fa-circle-o text-gray}"></i>Khác</li>`);
                        PieData.push({
                                        value: total - currentsum,
                                        color: rgb[6],
                                        highlight: rgb[6],
                                        label: "Khác"
                                      });
                        return;
                    }
                });

                var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
                var pieChart = new Chart(pieChartCanvas);
                var pieOptions = {
                  //Boolean - Whether we should show a stroke on each segment
                  segmentShowStroke: true,
                  //String - The colour of each segment stroke
                  segmentStrokeColor: "#fff",
                  //Number - The width of each segment stroke
                  segmentStrokeWidth: 2,
                  //Number - The percentage of the chart that we cut out of the middle
                  percentageInnerCutout: 50, // This is 0 for Pie charts
                  //Number - Amount of animation steps
                  animationSteps: 100,
                  //String - Animation easing effect
                  animationEasing: "easeOutBounce",
                  //Boolean - Whether we animate the rotation of the Doughnut
                  animateRotate: true,
                  //Boolean - Whether we animate scaling the Doughnut from the centre
                  animateScale: false,
                  //Boolean - whether to make the chart responsive to window resizing
                  responsive: true,
                  // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
                  maintainAspectRatio: true,
                  //String - A legend template
                  legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
                };
                //Create pie or douhnut chart
                // You can switch between pie and douhnut using the method below.
                pieChart.Doughnut(PieData, pieOptions);
            },
            error: function(){
                console.log("error!");
            },
            complete: function(){}
        });
    </script>
}