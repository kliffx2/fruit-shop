@{
    ViewData["Title"] = "Cửa Hàng";
    int pageCount = (int)ViewBag.pageCount;
    int pageNumber = (int)ViewBag.pageNumber;
    int pageSize = (int)ViewBag.pageSize;
    int stt = pageSize * pageNumber - (pageSize - 1);
    int category = ViewBag.category;
    int minPrice = ViewBag.minprice;
    int maxPrice = ViewBag.maxprice;
}
<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-section set-bg" data-setbg="/img/breadcrumb.jpg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <div class="breadcrumb__text">
                    <h2>Organi Shop</h2>
                    <div class="breadcrumb__option">
                        <a href="/index.html">Home</a>
                        <span>Shop</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->
<!-- Product Section Begin -->
<section class="product spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-5">
                <div class="sidebar">
                    <div class="sidebar__item">
                        <h4>Department</h4>
                        <ul id="depart">
                        </ul>
                    </div>
                    <div class="sidebar__item">
                        <h4>Price</h4>
                        <div class="price-range-wrap">
                            <div class="price-range ui-slider ui-corner-all ui-slider-horizontal ui-widget ui-widget-content"
                                 data-min="10" data-max="1000">
                                <div class="ui-slider-range ui-corner-all ui-widget-header"></div>
                                <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                                <span tabindex="0" class="ui-slider-handle ui-corner-all ui-state-default"></span>
                            </div>
                            <div class="range-slider">
                                <div class="price-input">
                                    <input type="text" id="minamount">
                                    <input type="text" id="maxamount">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="sidebar__item">
                        <div class="latest-product__text">
                            <h4>Latest Products</h4>
                            <div class="latest-product__slider owl-carousel" id="latest-product">
                               
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-9 col-md-7">
                <div class="product__discount">
                    <div class="section-title product__discount__title">
                        <h2>Sale Off</h2>
                    </div>
                    <div class="row">
                        <div class="product__discount__slider owl-carousel" id="product-discount">
                            @{
                                foreach (var item in Model.Discount)
                                {
                                    var discount = item.DiscountType == 0 ? ("-" + item.DiscountValue + "$") : ("-" + item.DiscountValue + "%");
                                    <div class="col-lg-4">
                                        <div class="product__discount__item">
                                            <div class="product__discount__item__pic set-bg"
                                                 data-setbg="@item.Avatar" style="background-image: url(@item.Avatar);">
                                                <div class="product__discount__percent">@discount</div>
                                                <ul class="product__item__pic__hover" id="@item.Id">
                                                    <li><a href="#"><i class="fa fa-heart"></i></a></li>
                                                    <li><a href="#"><i class="fa fa-retweet"></i></a></li>
                                                    <li><a href="#" class="add-to-cart"><i class="fa fa-shopping-cart"></i></a></li>
                                                </ul>
                                            </div>
                                            <div class="product__discount__item__text">
                                                <span>@item.Category</span>
                                                <h5><a href="/ProductDetail/Product?id=@item.Id">@item.Name</a></h5>
                                                <div class="product__item__price">$@item.Price.ToString("0.00") <span>@item.OldPrice.ToString("0,0") VNĐ</span></div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
                <div class="filter__item">
                    <div class="row">
                        <div class="col-lg-4 col-md-5">
                            <div class="filter__sort">
                                <span>Sort By</span>
                                <select>
                                    <option value="0">Default</option>
                                    <option value="0">Default</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4">
                            <div class="filter__found">
                                <h6><span id="product-count">@Model.Count</span> Products found</h6>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-3">
                            <div class="filter__option">
                                <span class="icon_grid-2x2"></span>
                                <span class="icon_ul"></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" id="filter-item">
                    @{
                        foreach (var item in Model.ListProduct)
                        {
                            <div class="col-lg-4 col-md-6 col-sm-6">
                                <div class="product__item">
                                    <div class="product__item__pic set-bg" data-setbg="@item.Avatar" style="background-image: url(@item.Avatar);">
                                        <ul class="product__item__pic__hover" id="@item.Id">
                                            <li><a href="#"><i class="fa fa-heart"></i></a></li>
                                            <li><a href="#"><i class="fa fa-retweet"></i></a></li>
                                            <li><a href="#" class="add-to-cart"><i class="fa fa-shopping-cart"></i></a></li>
                                        </ul>
                                    </div>
                                    <div class="product__item__text">
                                        <h6><a href="/ProductDetail/Product?id=@item.Id">@item.Name</a></h6>
                                        <h5>@item.Price.ToString("0,0") VNĐ</h5>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="product__pagination">
                    <a href="/ShoppingGrid/Index?category=@category&&minprice=@minPrice&&maxPrice=@maxPrice&&pageNumber=@Math.Max(pageNumber-1,1)"><i class="fa fa-long-arrow-left"></i></a>
                    @{
                        for (int i = 1; i <= pageCount; ++i)
                        {
                            <a href="/ShoppingGrid/Index?category=@category&&minprice=@minPrice&&maxPrice=@maxPrice&&pageNumber=@i">@i</a>
                        }
                    }
                    <a href="/ShoppingGrid/Index?category=@category&&minprice=@minPrice&&maxPrice=@maxPrice&&pageNumber=@Math.Min(pageNumber+1,pageCount)"><i class="fa fa-long-arrow-right"></i></a>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Product Section End -->


@section Scripts{
    <script>

         // category
        // jquery chỉ chạy với id, thay vì class nếu nó được thêm vào sau khi tải trang

        $.ajax({
            url: "/ShoppingGrid/GetAllCategories",
            type: "GET",
            dataType: "json",
            beforeSend: function(){},
            success: function(data){
                $('#depart').append('<li><a href="/ShoppingGrid/Index" class="category">All</a></li>');
                data.forEach(function (item,index){
                    let row = `<li><a href="/ShoppingGrid/Index?category=${item.id}" class="category">${item.name}</a></li>`;
                    $('#depart').append(row);
                })
            },
            error: function(){},
            complete: function(){}
        });

        // trigger khi thêm sản phẩm vào giỏ hàng
        $(document).ready(function(){
            $(document).on('click', '.add-to-cart', function(e){
                e.preventDefault();
                let id = $(this).closest('ul').attr('id');
                $.ajax({
                    url: "/ShoppingCart/AddItemToCart",
                    type: "GET",
                    data: {
                        id: id,
                    },
                    dataType: "json",
                    beforeSend: function(){},
                    success: function(data){
                        alert("Thêm sản phẩm vào giả hàng thành công!");
                    },
                    error: function(){},
                    complete: function(){}
                });
            });
        });

        // bắt trigger của input range
        $('.ui-slider-handle').on("change mouseover", async function() {
            const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));
            await sleep(1000);
            var url = "/ShoppingGrid/Index?pageNumber=";
            var min = $('#minamount').val();
            min = min.substring(1,min.length);
            var max = $('#maxamount').val();
            max = max.substring(1,max.length);
            url = url + '@pageNumber' + "&&category=" + '@category' + "&&minprice=" + min + "&&maxprice=" + max;
            window.location.href = url;
            console.log(url);
        });
       
        $.ajax({
            url: "/Home/GetLatestProducts",
            type: "GET",
            dataType: "json",
            success: function(data){
                let col = jQuery('<div>', {class: 'latest-prdouct__slider__item' });
                data.forEach(function(item,index){
                    let price = parseFloat(item.price).toFixed(2);
                    let row = `<a href="/ProductDetail/Product?id=${item.id}" class="latest-product__item">
                                    <div class="latest-product__item__pic">
                                        <img src="${item.avatar}" alt="">
                                    </div>
                                    <div class="latest-product__item__text">
                                        <h6>${item.name}</h6>
                                        <span>$${price}</span>
                                    </div>
                                </a>`;
                    col.append(row);
                    if (index % 3 == 2){
                        $('#latest-product').owlCarousel().trigger('add.owl.carousel', col);                        
                        col = jQuery('<div>', {class: 'latest-prdouct__slider__item' });
                    }
                });
                $('#latest-product').trigger('refresh.owl.carousel');
            }
        });

        $(document).ready(async function () {
            const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));
            await sleep(1000);
            var rangeSlider = $(".price-range"),
            minamount = $("#minamount"),
            maxamount = $("#maxamount"),
            minPrice = rangeSlider.data('min'),
            maxPrice = rangeSlider.data('max');
            rangeSlider.slider({
                range: true,
                min: minPrice,
                max: maxPrice,
                values: [@minPrice, @maxPrice],
                slide: function (event, ui) {
                    minamount.val('$' + ui.values[0]);
                    maxamount.val('$' + ui.values[1]);
                }
            });
            minamount.val('$' + rangeSlider.slider("values", 0));
            maxamount.val('$' + rangeSlider.slider("values", 1));
        });
    </script>
}